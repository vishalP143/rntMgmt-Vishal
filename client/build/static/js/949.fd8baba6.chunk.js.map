{"version":3,"file":"static/js/949.fd8baba6.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { getSwitchBaseUtilityClass } from \"./switchBaseClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)({\n  padding: 9,\n  borderRadius: '50%',\n  variants: [{\n    props: {\n      edge: 'start',\n      size: 'small'\n    },\n    style: {\n      marginLeft: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'start' && ownerState.size !== 'small',\n    style: {\n      marginLeft: -12\n    }\n  }, {\n    props: {\n      edge: 'end',\n      size: 'small'\n    },\n    style: {\n      marginRight: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'end' && ownerState.size !== 'small',\n    style: {\n      marginRight: -12\n    }\n  }]\n});\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required = false,\n    tabIndex,\n    type,\n    value,\n    ...other\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = {\n    ...props,\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, {\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, {\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type,\n      ...(type === 'checkbox' && value === undefined ? {} : {\n        value\n      }),\n      ...inputProps\n    }), checked ? checkedIcon : icon]\n  });\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return {\n    ...classes,\n    // forward the disabled and checked classes to the SwitchBase\n    ...composedClasses\n  };\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  variants: [{\n    props: {\n      color: 'default',\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n        color: (theme.vars || theme).palette[color].main\n      },\n      [`&.${checkboxClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.action.disabled\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium',\n    disableRipple = false,\n    className,\n    ...other\n  } = props;\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = {\n    ...props,\n    disableRipple,\n    color,\n    indeterminate,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, {\n    type: \"checkbox\",\n    inputProps: {\n      'data-indeterminate': indeterminate,\n      ...inputProps\n    },\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize ?? size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    disableRipple: disableRipple,\n    ...other,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from \"../FormControl/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from \"./formControlLabelClasses.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  },\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  },\n  variants: [{\n    props: {\n      labelPlacement: 'start'\n    },\n    style: {\n      flexDirection: 'row-reverse',\n      marginRight: -11\n    }\n  }, {\n    props: {\n      labelPlacement: 'top'\n    },\n    style: {\n      flexDirection: 'column-reverse'\n    }\n  }, {\n    props: {\n      labelPlacement: 'bottom'\n    },\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      labelPlacement\n    }) => labelPlacement === 'start' || labelPlacement === 'top' || labelPlacement === 'bottom',\n    style: {\n      marginLeft: 16 // used for row presentation of radio/checkbox\n    }\n  }]\n})));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(memoTheme(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n})));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n    checked,\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    inputRef,\n    label: labelProp,\n    labelPlacement = 'end',\n    name,\n    onChange,\n    required: requiredProp,\n    slots = {},\n    slotProps = {},\n    value,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const disabled = disabledProp ?? control.props.disabled ?? muiFormControl?.disabled;\n  const required = requiredProp ?? control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [TypographySlot, typographySlotProps] = useSlot('typography', {\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(TypographySlot, {\n      component: \"span\",\n      ...typographySlotProps,\n      className: clsx(classes.label, typographySlotProps?.className),\n      children: label\n    });\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    typography: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","padding","borderRadius","variants","props","edge","size","style","marginLeft","_ref","ownerState","marginRight","_ref2","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","cursor","position","opacity","width","height","top","left","margin","zIndex","React","ref","autoFocus","checked","checkedProp","checkedIcon","className","defaultChecked","disabled","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","setCheckedState","useControlled","controlled","default","Boolean","state","muiFormControl","useFormControl","hasLabelFor","_objectSpread","classes","slots","root","concat","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","createSvgIcon","d","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","prop","overridesResolver","styles","indeterminate","color","memoTheme","theme","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","filter","createSimplePaletteValueFilter","map","mainChannel","main","_ref3","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","fontSize","getFormControlLabelUtilityClasses","FormControlLabelRoot","formControlLabelClasses","label","labelPlacement","display","alignItems","verticalAlign","WebkitTapHighlightColor","flexDirection","AsteriskComponent","asterisk","error","_ref4","componentsProps","control","disableTypography","labelProp","requiredProp","slotProps","controlProps","forEach","key","fcs","formControlState","states","externalForwardedProps","TypographySlot","typographySlotProps","useSlot","elementType","Typography"],"sourceRoot":""}