{"version":3,"file":"static/js/378.bf102d4b.chunk.js","mappings":"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","sources":["components/CreateRoom.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport {\n  TextField, MenuItem, Button, FormControlLabel, Checkbox, Container,\n  Typography, Grid, Paper, CircularProgress\n} from '@mui/material';\n\nconst CreateRoom = () => {\n  const navigate = useNavigate();\n  const [room, setRoom] = useState({\n    room_number: '', floor_number: '', building_name: '', room_type: 'Single', rent: '',\n    availability: true, tenant_name: '', tenant_email: '', tenant_phone: '',\n    lease_start_date: '', lease_end_date: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const onChange = useCallback((e) => {\n    const { name, value, type, checked } = e.target;\n    setRoom((prevRoom) => ({\n      ...prevRoom,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n  }, []);\n\n  const onSubmit = useCallback((e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    // Validate rent\n    if (room.rent <= 0) {\n      setError('Rent must be a positive number.');\n      setLoading(false);\n      return;\n    }\n\n    // Validate lease dates\n    if (room.lease_start_date && room.lease_end_date && new Date(room.lease_start_date) > new Date(room.lease_end_date)) {\n      setError('Lease start date cannot be later than the lease end date.');\n      setLoading(false);\n      return;\n    }\n\n    axios\n      .post('https://rntmgmt-vishal.onrender.com/api/rooms', room)\n      .then(() => {\n        alert('Room created successfully!');\n        setRoom({\n          room_number: '', floor_number: '', building_name: '', room_type: 'Single', rent: '',\n          availability: true, tenant_name: '', tenant_email: '', tenant_phone: '',\n          lease_start_date: '', lease_end_date: ''\n        });\n        setError('');\n        navigate('/rooms');\n      })\n      .catch((err) => {\n        const errorMessage = err.response?.data || 'Failed to create room. Please try again.';\n        setError(errorMessage);\n      })\n      .finally(() => setLoading(false));\n  }, [room, navigate]);\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ my: 5 }}>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        Create New Room\n      </Typography>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" gutterBottom>\n        Please fill in the details below to create a new room. Fields marked with <span style={{ color: 'red' }}>*</span> are mandatory.\n      </Typography>\n      <Paper sx={{ padding: 3 }}>\n        <form onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Room Number *\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"room_number\"\n                value={room.room_number}\n                onChange={onChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                label=\"Floor Number *\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"floor_number\"\n                type=\"number\"\n                value={room.floor_number}\n                onChange={onChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                label=\"Building Name *\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"building_name\"\n                value={room.building_name}\n                onChange={onChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                select\n                label=\"Room Type *\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"room_type\"\n                value={room.room_type}\n                onChange={onChange}\n                required\n              >\n                <MenuItem value=\"Single\">Single</MenuItem>\n                <MenuItem value=\"Double\">Double</MenuItem>\n                <MenuItem value=\"Shared\">Shared</MenuItem>\n              </TextField>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Rent (â‚¹ per month) *\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"rent\"\n                type=\"number\"\n                value={room.rent}\n                onChange={onChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox name=\"availability\" checked={room.availability} onChange={onChange} />}\n                label=\"Available\"\n              />\n            </Grid>\n          </Grid>\n\n          <Typography variant=\"h6\" gutterBottom>\n            Tenant Details (Optional)\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Tenant Name\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"tenant_name\"\n                value={room.tenant_name}\n                onChange={onChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Tenant Email\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"tenant_email\"\n                type=\"email\"\n                value={room.tenant_email}\n                onChange={onChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Tenant Phone\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"tenant_phone\"\n                type=\"tel\"\n                value={room.tenant_phone}\n                onChange={onChange}\n              />\n            </Grid>\n          </Grid>\n\n          <Typography variant=\"h6\" gutterBottom>\n            Lease Dates\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                label=\"Lease Start Date\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"lease_start_date\"\n                type=\"date\"\n                value={room.lease_start_date}\n                onChange={onChange}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                label=\"Lease End Date\"\n                variant=\"outlined\"\n                fullWidth\n                name=\"lease_end_date\"\n                type=\"date\"\n                value={room.lease_end_date}\n                onChange={onChange}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n          </Grid>\n\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth disabled={loading} sx={{ mt: 2 }}>\n            {loading ? <CircularProgress size={24} /> : 'Create Room'}\n          </Button>\n\n          <Button\n            variant=\"outlined\" color=\"secondary\" fullWidth sx={{ mt: 2 }} onClick={() => navigate('/rooms')}\n          >\n            Cancel\n          </Button>\n        </form>\n\n        {error && <Typography color=\"error\" variant=\"body2\" sx={{ mt: 2 }}>{error}</Typography>}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default React.memo(CreateRoom);\n"],"names":["CreateRoom","navigate","useNavigate","room","setRoom","useState","room_number","floor_number","building_name","room_type","rent","availability","tenant_name","tenant_email","tenant_phone","lease_start_date","lease_end_date","loading","setLoading","error","setError","onChange","useCallback","e","name","value","type","checked","target","prevRoom","_objectSpread","onSubmit","preventDefault","Date","axios","post","then","alert","catch","err","_err$response","errorMessage","response","data","finally","_jsxs","Container","maxWidth","sx","my","children","_jsx","Typography","variant","align","gutterBottom","color","style","Paper","padding","Grid","container","spacing","item","xs","TextField","label","fullWidth","required","sm","select","MenuItem","FormControlLabel","control","Checkbox","InputLabelProps","shrink","Button","disabled","mt","CircularProgress","size","onClick","React"],"sourceRoot":""}